{"version":3,"sources":["movies.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","style","backgroundColor","map","genre","i","key","class","slice","protoTypes","PropTypes","number","isRequired","string","arrayOf","App","state","isLoading","movies","getMovies","a","async","axios","get","data","console","log","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0SAKA,SAASA,EAAT,GAA0D,EAA1CC,GAA2C,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC9C,OACI,yBAAKC,UAAU,SACX,yBAAKC,IAAKH,EAAQI,IAAKN,IACvB,yBAAKI,UAAU,cACX,wBAAIA,UAAU,eAAeG,MAAO,CAACC,gBAAkB,QAAUR,GAC7E,wBAAII,UAAU,UAAWD,EAAOM,KAAK,SAACC,EAAOC,GAAQ,OAAO,wBAAIC,IAAKD,EAAGP,UAAU,iBAAiBM,OACvF,wBAAIN,UAAU,eAAeL,GAE7B,uBAAGc,MAAM,kBAAkBZ,EAAQa,MAAM,EAAG,KAA5C,SAOhBjB,EAAMkB,WAAa,CACfjB,GAAKkB,IAAUC,OAAOC,WACtBlB,MAAQgB,IAAUG,OAAOD,WACzBjB,QAAUe,IAAUG,OAAOD,WAC3BhB,OAASc,IAAUG,OAAOD,WAC1BnB,KAAOiB,IAAUC,OAAOC,WACxBf,OAAQa,IAAUI,QAAQJ,IAAUG,QAAQD,YAGjCrB,QC0CAwB,E,2MAjEbC,MAAQ,CACNC,WAAY,EACZC,OAAS,I,EAIXC,UAAY,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAeoCE,IAAMC,IAAI,6DAf9C,gBAeiBL,EAfjB,EAeFM,KAAUA,KAASN,OAC3BO,QAAQC,IAAIR,GAEZ,EAAKS,SAAS,CAAET,SAAQD,WAAY,IAlB1B,sC,qJAwBVW,KAAKT,Y,gFAME,IAAD,EACsBS,KAAKZ,MAA1BC,EADD,EACCA,UAAWC,EADZ,EACYA,OAClB,OACE,6BAASX,MAAM,aACXU,EAEU,yBAAKnB,UAAU,UAAf,kBAOE,6BACGoB,EAAOf,KAAI,SAAA0B,GAAK,OACf,kBAAC,EAAD,CAAOrC,GAAIqC,EAAMrC,GAAIC,KAAMoC,EAAMpC,KACzBC,MAAOmC,EAAMnC,MAAOC,QAASkC,EAAMlC,QACnCC,OAAQiC,EAAMC,mBAAoBxB,IAAKuB,EAAMrC,GAC7CK,OAAQgC,EAAMhC,kB,GAvD9BkC,IAAMC,WCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7e55314b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\n// 함수형 컴포넌트\r\nfunction Movie({id, year, title, summary, poster, genres}){\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} />\r\n            <div className=\"movie_date\">\r\n                <h3 className=\"movie__title\" style={{backgroundColor : \"red\" }}>{title}</h3>\r\n    <ul className=\"genres\">{ genres.map( (genre, i) => { return <li key={i} className=\"movie__genres\">{genre}</li> }) }</ul>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n\r\n                <p class=\"movie__summary\">{summary.slice(0, 140)}...</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// id : number\r\nMovie.protoTypes = {\r\n    id : PropTypes.number.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    poster : PropTypes.string.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from 'react';\nimport { render } from 'react-dom';\nimport Protypes from \"prop-types\";\nimport axios from 'axios';\nimport Movie from \"./movies\";\n\nclass App extends React.Component{\n  state = {\n    isLoading : true,\n    movies : []\n  };\n\n  //async를 붙인 것은 조금 기다려야 한다라는 것을 알려주는 것.\n  getMovies = async () =>{\n    // await는 함수가 내가 뭘 기다렸으면 해? 라는 질문에 답하는 것이 되는 꼴.\n    // axios 앞에 await를 붙임으로써 axios가 끝날 때까지 기다리기를 계속함 (js 문법임)\n    // axios는 속도가 느리기 때문에 await를 붙여준 것.\n\n    // await는 async를 쓰지 않으면 사용할 수 없다.\n\n    // 정리하면 async, await를 붙이는 이유는 해당 함수 getMovies()에게 조금 시간이 필요하고, 그것을 기다려!\n    // 라고 이야기 하는 것과 같다. \n\n    // 여기서 잡은 데이터를 state에 저장해서 사용할 것.\n    // const a = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\"); // axios를 이용한 data get\n    // console.log(a.data.data.movies); // js 버전\n\n    // es6 버전 멋지제\n    const { data :  { data : { movies }}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    console.log(movies);\n\n    this.setState({ movies, isLoading : false }); // = {movies: movies}\n    \n \n  }\n\n  async componentDidMount(){ // render가 되고 난 후에 실행되는 함수라 했다.\n    this.getMovies();\n\n\n  }\n\n\n  render(){\n    const {isLoading, movies} = this.state;\n    return (\n      <section class=\"container\">\n        { isLoading ? \n                  (\n                    <div className=\"loader\">\n                      \"I am Loading\"\n                    </div>\n                  )\n                   :\n                   (\n                     //an arrow function wrapped by () will return the value it wraps, so if I wanted to use curly braces I had to add the return keyword\n                      <div>\n                        {movies.map(movie => (\n                          <Movie id={movie.id} year={movie.year}\n                                  title={movie.title} summary={movie.summary}\n                                  poster={movie.medium_cover_image} key={movie.id}\n                                  genres={movie.genres}\n                          />\n                        ))}\n                      </div>\n                   )\n                   }\n      </section>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('test'));\n\n"],"sourceRoot":""}